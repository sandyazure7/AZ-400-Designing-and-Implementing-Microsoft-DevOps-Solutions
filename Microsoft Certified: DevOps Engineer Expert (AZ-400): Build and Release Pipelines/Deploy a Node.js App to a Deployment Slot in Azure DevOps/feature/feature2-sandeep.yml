# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

parameters:
  - name: Environment
    displayName: Deployment Environment
    type: string 
    default: nonprod
    values:
    - nonprod
    - prod

trigger:
- feature/develop

variables: 
  - name: 'SUBSCRIPTION'
    ${{ if eq(parameters['Environment'], 'nonprod') }}: 
      value: 'ServiceConnection'
    ${{ if eq(parameters['Environment'], 'prod') }}:
      value: 'ServiceConnection'   

  - name: 'RESOURCE_GROUP'    
    value: '460-3d9b6a2a-deploy-a-node-js-app-to-a-deployment'

  - name: 'APPSERVICE_APP_NAME'
    ${{ if eq(parameters['Environment'], 'nonprod') }}: 
        value: 'webappbq7y5xudo2ml6'
    ${{ if eq(parameters['Environment'], 'prod') }}:
        value: 'webappbq7y5xudo2ml6'

  - name: webAppName
    value: $(APPSERVICE_APP_NAME)


stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      name: 'Default'

    steps:

    - task: NodeTool@0
      inputs:
        versionSpec: '12.x'
      displayName: 'Install Node.js'

    - script: |
        npm install --verbose
      displayName: 'npm install, build and test'

    - task: CmdLine@2
      inputs:
        script: 'sudo apt-get -y install zip'
      displayName: 'zip install'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(webAppName)
    pool:
      name: 'Default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy'
            inputs:
              azureSubscription: $(SUBSCRIPTION)
              appType: webAppLinux
              appName: $(webAppName)
              runtimeStack: 'NODE|8.0'
              deployToSlotOrASE: true
              SlotName: 'dev'
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
              startUpCommand: 'npm run start'

          - task: AzureAppServiceManage@0
            inputs:
              azureSubscription: $(SUBSCRIPTION)
              Action: 'Swap Slots'
              WebAppName: $(webAppName)
              ResourceGroupName: $(resourceGroup)
              SourceSlot: 'dev'

